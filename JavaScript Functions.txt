// Function declaration
function printOdds(count) {
    // Check if count is negative
    if (count < 0) {
        console.log("Please provide a non-negative count.");
        return;
    }

    // Loop and print odd numbers
    for (let i = 1; i <= count; i++) {
        if (i % 2 !== 0) {
            console.log(i);
        }
    }
}

// Example usage
printOdds(10); // Prints odd numbers from 1 to 10
printOdds(15); // Prints odd numbers from 1 to 15
printOdds(-5); // Outputs an error message due to negative count

// Function declaration
function checkAge(userName, age) {
    // Local variables with greeting messages
    let aboveSixteen = `Congrats ${userName}, you can drive!`;
    let belowSixteen = `Sorry ${userName}, but you need to wait until you're 16.`;

    // Check if age is below 16
    if (age < 16) {
        console.log(belowSixteen);
    } else {
        console.log(aboveSixteen);
    }
}

// Example usage
checkAge("John", 18);  // Outputs "Congrats John, you can drive!"
checkAge("Alice", 14); // Outputs "Sorry Alice, but you need to wait until you're 16."

// Function declaration
function checkCoordinates(x, y) {
    if (x === 0 && y === 0) {
        console.log(`The point (${x}, ${y}) is at the origin.`);
    } else if (x === 0) {
        console.log(`The point (${x}, ${y}) is on the y-axis.`);
    } else if (y === 0) {
        console.log(`The point (${x}, ${y}) is on the x-axis.`);
    } else if (x > 0 && y > 0) {
        console.log(`The point (${x}, ${y}) is in Quadrant 1.`);
    } else if (x < 0 && y > 0) {
        console.log(`The point (${x}, ${y}) is in Quadrant 2.`);
    } else if (x < 0 && y < 0) {
        console.log(`The point (${x}, ${y}) is in Quadrant 3.`);
    } else if (x > 0 && y < 0) {
        console.log(`The point (${x}, ${y}) is in Quadrant 4.`);
    }
}

// Example usage
checkCoordinates(0, 2);   // Outputs "The point (0, 2) is on the y-axis."
checkCoordinates(1, 2);   // Outputs "The point (1, 2) is in Quadrant 1."
checkCoordinates(-6, 18); // Outputs "The point (-6, 18) is in Quadrant 2."

// Function declaration
function checkTriangleType(side1, side2, side3) {
    // Check for invalid triangle
    if (side1 + side2 <= side3 || side1 + side3 <= side2 || side2 + side3 <= side1) {
        return "Invalid triangle. The sum of two sides should be greater than the length of the third side.";
    }

    // Check triangle type
    if (side1 === side2 && side2 === side3) {
        return "Equilateral triangle. All side lengths are equal.";
    } else if (side1 === side2 || side1 === side3 || side2 === side3) {
        return "Isosceles triangle. Only two side lengths are equal.";
    } else {
        return "Scalene triangle. All side lengths are different.";
    }
}

// Example usage
console.log(checkTriangleType(1, 2, 2));  // Outputs "Isosceles triangle. Only two side lengths are equal."
console.log(checkTriangleType(1, 1, 2));  // Outputs "Invalid triangle. The sum of two sides should be greater than the length of the third side."
console.log(checkTriangleType(3, 3, 3));  // Outputs "Equilateral triangle. All side lengths are equal."
console.log(checkTriangleType(3, 4, 5));  // Outputs "Scalene triangle. All side lengths are different."

// Function declaration
function checkDataUsage(planLimit, day, usage) {
    const daysRemaining = 30 - day;
    const averageDailyUse = usage / day;
    const remainingData = planLimit - usage;

    console.log(`${day} days used, ${daysRemaining} days remaining`);
    console.log(`Average daily use: ${averageDailyUse.toFixed(3)} GB/day`);

    if (averageDailyUse > planLimit / 30) {
        const excessUsage = (averageDailyUse - planLimit / 30) * daysRemaining;
        console.log(`You are EXCEEDING your average daily use (${(planLimit / 30).toFixed(3)} GB/day),`);
        console.log(`continuing this high usage, you'll exceed your data plan by ${excessUsage.toFixed(1)} GB.`);
        console.log(`To stay below your data plan, use no more than ${(planLimit / 30 - excessUsage / daysRemaining).toFixed(3)} GB/day.`);
    } else {
        console.log(`You are within your data plan.`);
        console.log(`You have ${remainingData.toFixed(1)} GB remaining.`);
        console.log(`You can afford to use ${(remainingData / daysRemaining).toFixed(3)} GB/day for the rest of the month.`);
    }
}

// Example usage
checkDataUsage(100, 15, 56);
